[{"D:\\chat\\chat\\src\\redux\\user\\actions.ts":"1","D:\\chat\\chat\\src\\redux\\dialogs\\types.ts":"2","D:\\chat\\chat\\src\\components\\Messages\\Messages.container.tsx":"3","D:\\chat\\chat\\src\\Forms\\Auth\\RegisterForm\\RegisterForm.tsx":"4","D:\\chat\\chat\\src\\components\\FoundUsers\\FoundUsers.tsx":"5","D:\\chat\\chat\\src\\components\\Profile\\Profile.styled.tsx":"6","D:\\chat\\chat\\src\\components\\Message\\Message.tsx":"7","D:\\chat\\chat\\src\\components\\User\\User.tsx":"8","D:\\chat\\chat\\src\\components\\Message\\MessageAudio\\MessageAudio.styled.tsx":"9","D:\\chat\\chat\\src\\components\\Messages\\Messages.tsx":"10","D:\\chat\\chat\\src\\components\\Dialog\\Dialog.tsx":"11","D:\\chat\\chat\\src\\components\\Dialogs\\Dialogs.container.tsx":"12","D:\\chat\\chat\\src\\components\\Search\\Search.container.tsx":"13","D:\\chat\\chat\\src\\redux\\messages\\actions.ts":"14","D:\\chat\\chat\\src\\redux\\dialogs\\actions.ts":"15","D:\\chat\\chat\\src\\components\\ChatInput\\ChatInput.container.tsx":"16","D:\\chat\\chat\\src\\redux\\messages\\types.ts":"17","D:\\chat\\chat\\src\\index.tsx":"18","D:\\chat\\chat\\src\\core\\axios.js":"19","D:\\chat\\chat\\src\\components\\Message\\MessageAudio\\MessageAudio.container.tsx":"20","D:\\chat\\chat\\src\\components\\Message\\MessageAudio\\MessageAudio.tsx":"21","D:\\chat\\chat\\src\\components\\Message\\Message.styled.tsx":"22","D:\\chat\\chat\\src\\components\\Messages\\Messages.styled.tsx":"23","D:\\chat\\chat\\src\\components\\Dialogs\\Dialogs.tsx":"24","D:\\chat\\chat\\src\\components\\Dialog\\Dialog.styled.tsx":"25","D:\\chat\\chat\\src\\Forms\\Auth\\ForgotPasswordForm\\ForgotPasswordForm.styled.tsx":"26","D:\\chat\\chat\\src\\components\\Avatar\\Avatar.tsx":"27","D:\\chat\\chat\\src\\components\\Avatar\\Avatar.styled.tsx":"28","D:\\chat\\chat\\src\\redux\\dialogs\\reducer.ts":"29","D:\\chat\\chat\\src\\components\\ChatInput\\ChatInput.tsx":"30","D:\\chat\\chat\\src\\components\\Interlocutor\\Interlocutor.styled.tsx":"31","D:\\chat\\chat\\src\\core\\socket.js":"32","D:\\chat\\chat\\src\\components\\Dialogs\\Dialogs.styled.tsx":"33","D:\\chat\\chat\\src\\App.tsx":"34","D:\\chat\\chat\\src\\components\\Profile\\Profile.tsx":"35","D:\\chat\\chat\\src\\redux\\messages\\reducer.ts":"36","D:\\chat\\chat\\src\\redux\\user\\reducer.ts":"37","D:\\chat\\chat\\src\\redux\\user\\types.ts":"38","D:\\chat\\chat\\src\\Pages\\Auth\\Auth.tsx":"39","D:\\chat\\chat\\src\\components\\Interlocutor\\Interlocutor.tsx":"40","D:\\chat\\chat\\src\\components\\FoundUsers\\FoundUsers.styled.tsx":"41","D:\\chat\\chat\\src\\components\\ChatInput\\Recorder\\Recorder.styled.tsx":"42","D:\\chat\\chat\\src\\components\\Interlocutor\\Interlocutor.container.tsx":"43","D:\\chat\\chat\\src\\components\\User\\User.container.tsx":"44","D:\\chat\\chat\\src\\components\\FoundUsers\\FoundUsers.container.tsx":"45","D:\\chat\\chat\\src\\components\\Dialog\\Dialog.container.tsx":"46","D:\\chat\\chat\\src\\Forms\\Auth\\LoginForm\\LoginForm.tsx":"47","D:\\chat\\chat\\src\\lib\\generateAvatar.ts":"48","D:\\chat\\chat\\src\\Pages\\Home\\Home.tsx":"49","D:\\chat\\chat\\src\\components\\Search\\Search.styled.tsx":"50","D:\\chat\\chat\\src\\components\\ChatInput\\Recorder\\Recorder.tsx":"51","D:\\chat\\chat\\src\\globalStyles.tsx":"52","D:\\chat\\chat\\src\\Pages\\Auth\\Auth.styled.tsx":"53","D:\\chat\\chat\\src\\Forms\\Auth\\Auth.styled.tsx":"54","D:\\chat\\chat\\src\\components\\User\\User.styled.tsx":"55","D:\\chat\\chat\\src\\components\\ChatInput\\ChatInput.styled.tsx":"56","D:\\chat\\chat\\src\\Forms\\Auth\\Assets\\index.ts":"57","D:\\chat\\chat\\src\\Pages\\Home\\Home.styled.tsx":"58","D:\\chat\\chat\\src\\components\\Search\\Search.tsx":"59","D:\\chat\\chat\\src\\Forms\\Auth\\ForgotPasswordForm\\ForgotPasswordForm.tsx":"60","D:\\chat\\chat\\src\\components\\Profile\\Profile.container.tsx":"61","D:\\chat\\chat\\src\\redux\\store.ts":"62","D:\\chat\\chat\\src\\components\\Profile\\Settings\\Settings.styled.tsx":"63","D:\\chat\\chat\\src\\components\\Profile\\Settings\\Settings.tsx":"64","D:\\chat\\chat\\src\\components\\Profile\\Settings\\UpdateForm\\UpdateForm.tsx":"65","D:\\chat\\chat\\src\\components\\Profile\\Settings\\UpdateForm\\UpdateForm.styled.tsx":"66","D:\\chat\\chat\\src\\components\\Profile\\Settings\\Settings.container.tsx":"67"},{"size":3927,"mtime":1610129050566,"results":"68","hashOfConfig":"69"},{"size":2134,"mtime":1609690882057,"results":"70","hashOfConfig":"69"},{"size":3410,"mtime":1610203083213,"results":"71","hashOfConfig":"69"},{"size":6787,"mtime":1609963796116,"results":"72","hashOfConfig":"69"},{"size":2629,"mtime":1609274845099,"results":"73","hashOfConfig":"69"},{"size":746,"mtime":1610107916760,"results":"74","hashOfConfig":"69"},{"size":2967,"mtime":1610136983345,"results":"75","hashOfConfig":"69"},{"size":1172,"mtime":1609948485662,"results":"76","hashOfConfig":"69"},{"size":936,"mtime":1610140385316,"results":"77","hashOfConfig":"69"},{"size":3127,"mtime":1609764907029,"results":"78","hashOfConfig":"69"},{"size":4304,"mtime":1610204510594,"results":"79","hashOfConfig":"69"},{"size":3200,"mtime":1610204514311,"results":"80","hashOfConfig":"69"},{"size":1583,"mtime":1609510592740,"results":"81","hashOfConfig":"69"},{"size":4970,"mtime":1610204069765,"results":"82","hashOfConfig":"69"},{"size":4925,"mtime":1610129047806,"results":"83","hashOfConfig":"69"},{"size":6031,"mtime":1610138797183,"results":"84","hashOfConfig":"69"},{"size":1442,"mtime":1609766714859,"results":"85","hashOfConfig":"69"},{"size":397,"mtime":1608295050755,"results":"86","hashOfConfig":"69"},{"size":194,"mtime":1609694943579,"results":"87","hashOfConfig":"69"},{"size":3015,"mtime":1610210369989,"results":"88","hashOfConfig":"69"},{"size":1544,"mtime":1610210471293,"results":"89","hashOfConfig":"69"},{"size":2808,"mtime":1610109242743,"results":"90","hashOfConfig":"69"},{"size":2408,"mtime":1609755155107,"results":"91","hashOfConfig":"69"},{"size":3331,"mtime":1609943481279,"results":"92","hashOfConfig":"69"},{"size":3269,"mtime":1610204307401,"results":"93","hashOfConfig":"69"},{"size":201,"mtime":1607841690148,"results":"94","hashOfConfig":"69"},{"size":1572,"mtime":1610114974477,"results":"95","hashOfConfig":"69"},{"size":1139,"mtime":1608664661109,"results":"96","hashOfConfig":"69"},{"size":2019,"mtime":1610201307291,"results":"97","hashOfConfig":"69"},{"size":5465,"mtime":1610204509050,"results":"98","hashOfConfig":"69"},{"size":2410,"mtime":1610111080543,"results":"99","hashOfConfig":"69"},{"size":107,"mtime":1609695272889,"results":"100","hashOfConfig":"69"},{"size":894,"mtime":1610108068263,"results":"101","hashOfConfig":"69"},{"size":1054,"mtime":1609960748299,"results":"102","hashOfConfig":"69"},{"size":1661,"mtime":1610208523107,"results":"103","hashOfConfig":"69"},{"size":1115,"mtime":1609765890780,"results":"104","hashOfConfig":"69"},{"size":1686,"mtime":1609941746760,"results":"105","hashOfConfig":"69"},{"size":2049,"mtime":1609941720600,"results":"106","hashOfConfig":"69"},{"size":1015,"mtime":1609766710121,"results":"107","hashOfConfig":"69"},{"size":2809,"mtime":1610130172641,"results":"108","hashOfConfig":"69"},{"size":928,"mtime":1610108034080,"results":"109","hashOfConfig":"69"},{"size":314,"mtime":1607607307838,"results":"110","hashOfConfig":"69"},{"size":2431,"mtime":1610115501673,"results":"111","hashOfConfig":"69"},{"size":598,"mtime":1609957944549,"results":"112","hashOfConfig":"69"},{"size":1021,"mtime":1609945351242,"results":"113","hashOfConfig":"69"},{"size":1603,"mtime":1610202002250,"results":"114","hashOfConfig":"69"},{"size":4336,"mtime":1608402614873,"results":"115","hashOfConfig":"69"},{"size":662,"mtime":1608379268412,"results":"116","hashOfConfig":"69"},{"size":2343,"mtime":1609961442478,"results":"117","hashOfConfig":"69"},{"size":1133,"mtime":1610107856463,"results":"118","hashOfConfig":"69"},{"size":3105,"mtime":1609771620874,"results":"119","hashOfConfig":"69"},{"size":280,"mtime":1608214018409,"results":"120","hashOfConfig":"69"},{"size":449,"mtime":1609962860019,"results":"121","hashOfConfig":"69"},{"size":3733,"mtime":1609963768667,"results":"122","hashOfConfig":"69"},{"size":1115,"mtime":1608673112469,"results":"123","hashOfConfig":"69"},{"size":4121,"mtime":1610138656085,"results":"124","hashOfConfig":"69"},{"size":184,"mtime":1608401554266,"results":"125","hashOfConfig":"69"},{"size":1238,"mtime":1610109953485,"results":"126","hashOfConfig":"69"},{"size":1177,"mtime":1608626593201,"results":"127","hashOfConfig":"69"},{"size":2141,"mtime":1608402613044,"results":"128","hashOfConfig":"69"},{"size":1206,"mtime":1609944553228,"results":"129","hashOfConfig":"69"},{"size":706,"mtime":1608662447952,"results":"130","hashOfConfig":"69"},{"size":2989,"mtime":1609950821896,"results":"131","hashOfConfig":"69"},{"size":4022,"mtime":1609945006518,"results":"132","hashOfConfig":"69"},{"size":4493,"mtime":1610204071633,"results":"133","hashOfConfig":"69"},{"size":1494,"mtime":1610114395037,"results":"134","hashOfConfig":"69"},{"size":1796,"mtime":1609944921825,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h1b049",{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"143"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"224"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"177"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"143"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"251"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"143"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},"D:\\chat\\chat\\src\\redux\\user\\actions.ts",[],"D:\\chat\\chat\\src\\redux\\dialogs\\types.ts",[],"D:\\chat\\chat\\src\\components\\Messages\\Messages.container.tsx",["296","297","298","299","300","301"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport MessagesComponent from './Messages'\r\nimport { getMessages, add_message, messageUpdateReadStatus, messageUpdateReadStatus2 } from '../../redux/messages/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DialogState } from '../../redux/dialogs/types'\r\nimport { MessageType, messageState } from '../../redux/messages/types'\r\nimport { UserState } from '../../redux/user/types'\r\nimport socket from '../../core/socket'\r\nimport { fetchDialogs } from '../../redux/dialogs/actions'\r\n\r\n\r\nconst Messages = () => {\r\n    const dispatch = useDispatch()\r\n    const currentDialog = useSelector( (state:{dialog:DialogState}) => state.dialog.currentDialog);\r\n    const selectedUser = useSelector( (state:{dialog:DialogState}) => state.dialog.selectedUser);\r\n    const messages = useSelector( (state: {message: messageState}) => state.message.items)\r\n    const me = useSelector( (state:{user:UserState}) => state.user.data)\r\n    const scrollRef = useRef<any>()\r\n    const wrapperRef = useRef<any>()\r\n    const [isTyping, setIsTyping] = useState(false)\r\n    let typingTimeoutId:any = null;\r\n\r\n\r\n    useEffect( () => {\r\n        currentDialog?._id && dispatch(getMessages(currentDialog._id))\r\n    }, [currentDialog, scrollRef, wrapperRef])\r\n\r\n    const toggleIsTyping = () => {\r\n        setIsTyping(true);\r\n        clearInterval(typingTimeoutId);\r\n        typingTimeoutId = setTimeout(() => {\r\n          setIsTyping(false);\r\n        }, 1000);\r\n      };\r\n\r\n      useEffect(() => {\r\n        const AddMessage = (Message:any) => {\r\n            dispatch(add_message(Message))\r\n        };\r\n        socket.on('SERVER:NEW_MESSAGE', AddMessage);\r\n        socket.on('SERVER:MESSAGES_READED', (data:any) =>{\r\n            if(me){\r\n                if(data.userId !== me._id){\r\n                    dispatch(messageUpdateReadStatus(data))\r\n                }\r\n            }\r\n         });\r\n\r\n        return () => socket.removeListener('SERVER:NEW_MESSAGE', AddMessage);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on('DIALOGS:TYPING', ({dialogId, userId}:any) => {\r\n            if(currentDialog){\r\n                if(currentDialog._id === dialogId && me?._id !== userId){\r\n                    toggleIsTyping();\r\n                }\r\n            }\r\n        });\r\n    }, [currentDialog])\r\n\r\n\r\n\r\n    if(!me){\r\n        return <></>\r\n    }\r\n    return(\r\n        \r\n        <MessagesComponent\r\n            isTyping={isTyping}\r\n            user={me}\r\n            currentDialog={currentDialog}\r\n            wrapperRef={wrapperRef}\r\n            scrollRef={scrollRef}\r\n            items={\r\n                messages && messages.length > 0  ? messages.map( (i:MessageType) => {\r\n                    return{\r\n                        id:i._id,\r\n                        text:i.text,\r\n                        user:{\r\n                            firstname:i.user.firstname,\r\n                            lastname:i.user.lastname,\r\n                            avatar:i.user.avatar\r\n                        },\r\n                        attachments:i.attachments,\r\n                        audio:i.audio,\r\n                        readed:i.read,\r\n                        isMe: i.user._id === me._id,\r\n                        createdAt: i.createdAt,\r\n                    }\r\n                }) :\"\"\r\n                \r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default Messages",["302","303"],"D:\\chat\\chat\\src\\Forms\\Auth\\RegisterForm\\RegisterForm.tsx",[],["304","305"],"D:\\chat\\chat\\src\\components\\FoundUsers\\FoundUsers.tsx",[],["306","307"],"D:\\chat\\chat\\src\\components\\Profile\\Profile.styled.tsx",[],"D:\\chat\\chat\\src\\components\\Message\\Message.tsx",[],["308","309"],"D:\\chat\\chat\\src\\components\\User\\User.tsx",[],"D:\\chat\\chat\\src\\components\\Message\\MessageAudio\\MessageAudio.styled.tsx",[],"D:\\chat\\chat\\src\\components\\Messages\\Messages.tsx",["310","311"],"D:\\chat\\chat\\src\\components\\Dialog\\Dialog.tsx",[],"D:\\chat\\chat\\src\\components\\Dialogs\\Dialogs.container.tsx",["312","313","314","315","316","317","318"],"D:\\chat\\chat\\src\\components\\Search\\Search.container.tsx",["319","320"],"import React,{useState, useRef, useEffect} from 'react'\r\nimport SearchComponent,{ SearchProps} from './Search'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { searchDialogs, clearFoundDialogs } from '../../redux/dialogs/actions'\r\nimport { DialogState } from '../../redux/dialogs/types'\r\n\r\ntype SearchContainerProps = {\r\n    onChange?:(value:string) => void,\r\n}\r\nconst Search = ({}: SearchContainerProps) => {\r\n    const [searchValue, setSearchValue] = useState<string>(\"\")\r\n    const SearchInputRef = useRef<HTMLInputElement | null>(null)\r\n    const dispatch = useDispatch()\r\n    const SelectedUser = useSelector( (state:{dialog: DialogState}) => state.dialog.selectedUser)\r\n\r\n    useEffect(() => {\r\n        setSearchValue(\"\")\r\n    }, [SelectedUser])\r\n    const onUserSearch = (value:string) => {\r\n        if(value !== \"\"){\r\n            dispatch(searchDialogs(value))\r\n        }else{\r\n            dispatch(clearFoundDialogs())\r\n            setSearchValue(\"\")\r\n        }\r\n    }\r\n\r\n    const changeValue = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(e.target.value);\r\n        onUserSearch(e.target.value)\r\n    }\r\n\r\n    const clearSearchValue = () => {\r\n        setSearchValue(\"\");\r\n        onUserSearch(\"\")\r\n        SearchInputRef && SearchInputRef.current?.focus()\r\n    } \r\n    \r\n    return(\r\n        <SearchComponent \r\n            SearchInputRef={SearchInputRef}\r\n            searchValue={searchValue}\r\n            changeValue={changeValue}\r\n            clearSearchValue={clearSearchValue}\r\n            />\r\n    )\r\n}\r\n\r\nexport default Search","D:\\chat\\chat\\src\\redux\\messages\\actions.ts",["321","322","323","324","325"],"D:\\chat\\chat\\src\\redux\\dialogs\\actions.ts",[],"D:\\chat\\chat\\src\\components\\ChatInput\\ChatInput.container.tsx",["326","327"],"import React,{useRef, useState} from 'react'\r\nimport ChatInputComponent, {AttachmentImagesType} from './ChatInput'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {DialogState} from '../../redux/dialogs/types'\r\nimport { createDialogs_sendMessage, createDialogs_sendVoiceRecord } from '../../redux/dialogs/actions'\r\nimport { sendMessagetoDialog, sendVoiceRecord } from '../../redux/messages/actions'\r\nimport socket from '../../core/socket'\r\nimport { UserState } from '../../redux/user/types'\r\n\r\nexport type EventTargetFiles = React.ChangeEvent<HTMLInputElement> & {\r\n    target:{\r\n        files:[FileList]\r\n    }\r\n}\r\n\r\nconst ChatInput = () => {\r\n    const [EmojiStatus, setEmojiStatus] = useState<boolean>(false)\r\n    const [InputValue, setInputValue] = useState<string>(\"\")\r\n    const [isRecording, setisRecording] = useState<boolean>(false)\r\n    const [AttachmentImages, setAttachmentImages] = useState<AttachmentImagesType[]>([])\r\n    const [passedTime, setpassedTime] = useState<number>(0)\r\n    const textAreaRef = useRef<HTMLTextAreaElement | null>(null)\r\n    const selectedUser = useSelector((state: {dialog:DialogState}) => state.dialog.selectedUser)\r\n    const currentDialog = useSelector((state: {dialog:DialogState}) => state.dialog.currentDialog)\r\n    const me = useSelector((state: {user:UserState}) => state.user.data)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const selectEmoji = (data:{colons:string}) => {\r\n        if(textAreaRef.current){\r\n            setInputValue(InputValue + data.colons)\r\n            textAreaRef.current.style.height = '55px';\r\n            textAreaRef.current.style.height = textAreaRef.current.scrollHeight + 'px';\r\n        }\r\n    }\r\n\r\n    const toogleEmojiOpen = () => {\r\n        setEmojiStatus(!EmojiStatus)\r\n    }\r\n\r\n    const changeInputValue = (e:React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setInputValue(e.target.value)\r\n        autoResize(e)\r\n    }\r\n\r\n    const onRecord = (blob:Blob) => {\r\n        if(selectedUser){\r\n            dispatch(createDialogs_sendVoiceRecord(blob, selectedUser._id))\r\n        }\r\n        else if(currentDialog){\r\n            dispatch(sendVoiceRecord(blob, currentDialog._id));\r\n        }\r\n    }\r\n\r\n    const uploadAttachmentHandle = (e:EventTargetFiles) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            const files = [...e.target.files]\r\n            if(\r\n                files.length > 12 ||\r\n                AttachmentImages.length + files.length > 12){\r\n                //TODO RETURN ERROR\r\n                return\r\n            }\r\n            setPreviewAttachment(files)  \r\n          }\r\n    }\r\n\r\n    const setPreviewAttachment = (files:File[]) => {\r\n        for (let i = 0; i < files.length ; i++){\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = function(e:any) {\r\n                setAttachmentImages((oldState:AttachmentImagesType[]) => [...oldState, {\r\n                    id: oldState.length >= 1 ? Math.max(...oldState.map((i:AttachmentImagesType) => i.id)) + 1 : 1,\r\n                    name: files[i].name,\r\n                    url: e.target.result,\r\n                    file: files[i]\r\n                }])\r\n              }\r\n            reader.readAsDataURL(files[i])\r\n        }\r\n    }\r\n\r\n    const deleteAttachment = ({id}:AttachmentImagesType) => {\r\n        setAttachmentImages((prevProps:AttachmentImagesType[]) => prevProps.filter( (i:AttachmentImagesType) => i.id !== id))\r\n    }\r\n\r\n    const onSend = () => {\r\n        if(/([^\\s])/.test(InputValue) || AttachmentImages && AttachmentImages.length > 0 ){\r\n            if(selectedUser){\r\n                dispatch(createDialogs_sendMessage(selectedUser._id, InputValue, AttachmentImages))\r\n                setAttachmentImages([])\r\n            }else if(currentDialog){\r\n                dispatch(sendMessagetoDialog(currentDialog._id, InputValue, AttachmentImages))\r\n                setAttachmentImages([])\r\n            }\r\n            setInputValue(\"\")\r\n        }else{\r\n            setInputValue(\"\")\r\n        }\r\n        setEmojiStatus(false)\r\n    }\r\n    const KeyPressHandle = (e:React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if(currentDialog && me){\r\n            socket.emit('DIALOGS:TYPING', { dialogId: currentDialog._id, userId: me._id });\r\n        }\r\n\r\n        if(e.key === \"Enter\"){\r\n            e.preventDefault()\r\n            onSend()\r\n        }\r\n    }\r\n\r\n    function PassedTimeFormat()  {\r\n        var sec_num:number = parseInt(passedTime.toString(), 10);\r\n        var minutes:string | number = Math.floor((sec_num) / 60);\r\n        var seconds:number | string = sec_num - (minutes * 60);\r\n    \r\n        if (minutes < 10) {minutes = \"0\"+minutes;}\r\n        if (seconds < 10) {seconds = \"0\"+seconds;}\r\n\r\n        return +minutes+':'+seconds;\r\n    }\r\n\r\n    const autoResize = (e:React.KeyboardEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        e.currentTarget.style.height = '55px';\r\n        e.currentTarget.style.height = e.currentTarget.scrollHeight + 'px';\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {selectedUser || currentDialog ? <ChatInputComponent\r\n            AttachmentImages={AttachmentImages}\r\n            deleteAttachment={deleteAttachment}\r\n            isRecording={isRecording}\r\n            sendHandle={onSend}\r\n            voiceSend={onSend}\r\n            recordingPassedTime={PassedTimeFormat}\r\n            autoResize={autoResize}\r\n            changeInputValue={changeInputValue}\r\n            toogleEmojiOpen={toogleEmojiOpen}\r\n            EmojiStatus={EmojiStatus}\r\n            onSend={onSend}\r\n            selectEmoji={selectEmoji}\r\n            inputValue={InputValue}\r\n            PassedTimeFormat={PassedTimeFormat}\r\n            uploadAttachmentHandle={uploadAttachmentHandle}\r\n            onRecord={onRecord}\r\n            setisRecording={setisRecording}\r\n            setpassedTime={setpassedTime}\r\n            textAreaRef={textAreaRef}\r\n            KeyPressHandle={KeyPressHandle}\r\n        /> :\"\"}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatInput","D:\\chat\\chat\\src\\redux\\messages\\types.ts",[],["328","329"],"D:\\chat\\chat\\src\\index.tsx",[],["330","331"],"D:\\chat\\chat\\src\\core\\axios.js",[],["332","333"],"D:\\chat\\chat\\src\\components\\Message\\MessageAudio\\MessageAudio.container.tsx",[],"D:\\chat\\chat\\src\\components\\Message\\MessageAudio\\MessageAudio.tsx",["334","335","336"],"import React, {useEffect, useState, useRef} from 'react'\r\nimport {Wrapper, Controls, ControlImg, ProgressBar, Wave, WaveImg, Duration} from './MessageAudio.styled'\r\nimport PlayIcon from './assets/play-icon.svg'\r\nimport PauseIcon from './assets/pause-button.svg'\r\nimport WaveIcon from '../../../Assets/img/sound-waves.svg'\r\nimport { MouseClickEvent } from './MessageAudio.container'\r\n\r\n\r\nexport type MessageAudioProps = {\r\n    AudioUrl:string\r\n    changeCurrentTime:(e:MouseClickEvent) => void,\r\n    audioElem:React.MutableRefObject<HTMLAudioElement>,\r\n    currentTime:number,\r\n    togglePlay:() => void,\r\n    isPlaying:boolean,\r\n    restDuration:string\r\n}\r\n\r\nconst MessageAudio = ({\r\n  AudioUrl,\r\n  changeCurrentTime,\r\n  audioElem,\r\n  currentTime,\r\n  togglePlay,\r\n  isPlaying,\r\n  restDuration\r\n}:MessageAudioProps) => { \r\n    return(\r\n        <Wrapper onClick={changeCurrentTime}>\r\n            <ProgressBar style={{width: audioElem.current ? (currentTime +.25)/audioElem.current.duration*100 + \"%\": \"auto\"} } />\r\n            <audio ref={audioElem} src={AudioUrl} preload=\"auto\" />\r\n            <Controls className=\"Control_Wrapper\" onClick={togglePlay}>\r\n                <ControlImg className=\"Control_Img\" src={isPlaying ? PauseIcon : PlayIcon} alt=\"playIcon\"/>\r\n            </Controls>\r\n            <Wave className=\"Wave\">\r\n                <WaveImg src={WaveIcon} alt=\"wave image\"/>\r\n            </Wave>\r\n            <Duration>{restDuration? restDuration : \"00:00\"}</Duration>\r\n        </Wrapper>\r\n    )\r\n} \r\n\r\nexport default MessageAudio\r\n\r\n","D:\\chat\\chat\\src\\components\\Message\\Message.styled.tsx",["337"],"import styled, {keyframes} from 'styled-components'\r\nimport {IsMeProps} from './Message'\r\n\r\ntype MessageWrapperProps ={\r\n} & IsMeProps\r\n\r\ntype MessageBubbleProps = {\r\n    attachment:boolean\r\n} & IsMeProps\r\n\r\ntype AttachmentImageProps = {\r\n    isSingle:boolean,\r\n}\r\ntype AttachmentWrapperProps = {\r\n    isText:boolean\r\n}\r\nexport const AvatarWrapper = styled.div<IsMeProps>`\r\n    margin-top:auto;\r\n    grid-area:avatar;\r\n    ${({isMe}) => isMe ? \"margin-left:10px\": \"margin-right:10px\" };\r\n`\r\n\r\n\r\nexport const MessageWrapper = styled.div<MessageWrapperProps>`\r\n    display: grid;\r\n    grid-template-columns: ${({isMe}) => isMe ? \"auto auto auto\" : \"auto auto auto\" };\r\n    grid-template-rows: auto auto;\r\n    grid-template-areas: ${({isMe}) => isMe ?   '\"inherit message avatar\"' : '\"avatar message\"' } ;\r\n    justify-content: ${({isMe}) => isMe ? \"end\" : \"start\"};\r\n    max-width:80%;\r\n    ${({isMe}) => isMe ? \"margin-left:auto\" : \"\"};\r\n    padding: 0px 34px;\r\n    \r\n    @media (max-width: 732px) {\r\n        padding: 0px 5px;\r\n        ${AvatarWrapper}{\r\n            display:none;\r\n        }\r\n    };\r\n    \r\n}\r\n`\r\n\r\nexport const MessageText = styled.span<{\r\n    isMe:boolean | undefined\r\n}>`\r\n    line-height:130.2%;\r\n    padding:${({isMe}) => isMe ? \"10px 33px 10px 12px\" : \"10px 12px 10px 12px\" };\r\n    // padding:8px 33px 8px 12px;\r\n    font-size:14px;\r\n    word-break: break-all;\r\n    @media (min-width: 560px) {\r\n        font-size:16px;\r\n    };\r\n`\r\n\r\n\r\nexport const MessageBubble = styled.div<MessageBubbleProps>`\r\n    background-color:white;\r\n    grid-area:message;\r\n    display:flex;\r\n    flex-direction:${({isMe}) => isMe ? \"row-reverse\" : \"row\"} ;\r\n    position:relative;\r\n    flex-direction: ${({attachment}) => attachment ? 'column' : 'column-reverse' };\r\n    max-width:600px;\r\n    width:100%;\r\n    background-color:${({isMe}) => isMe ? \"#E4EDFF\" : \"white\" };\r\n    align-items:flex-start;\r\n`\r\n\r\nexport const ReadStatus = styled.div<IsMeProps>`\r\n    margin-top:auto;\r\n    position:absolute;\r\n    bottom:10px;\r\n    right:10px;\r\n    z-index:2;\r\n`\r\n\r\nexport const ReadIcon = styled.img`\r\n    display:block;\r\n`\r\nexport const TimeWrapper = styled.div<IsMeProps>`\r\n    grid-column: ${({isMe}) => isMe ? \"1/3\" : \"2/4\"};\r\n    margin:${({isMe}) => isMe ? \"0 0 0 auto\" : \"0 auto 0 0\"};\r\n    margin-top:12px;\r\n    font-size: 13px;    \r\n    color:rgb(0,0,0,.5);\r\n`\r\nexport const AttachmentImage = styled.img<AttachmentImageProps>`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    min-width:150px;\r\n    height:${({isSingle}) => isSingle ? \"auto\" : \"200px\"};\r\n    padding:4px;\r\n    flex:1;\r\n    border-radius: 15px;\r\n    max-width:600px;\r\n    max-height:600px;\r\n`\r\nexport const AttachmentsWrapper = styled.div<AttachmentWrapperProps>`\r\n    display:flex;   \r\n    flex-wrap:wrap;\r\n    width:100%;\r\n`","D:\\chat\\chat\\src\\components\\Messages\\Messages.styled.tsx",[],"D:\\chat\\chat\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\chat\\chat\\src\\components\\Dialog\\Dialog.styled.tsx",[],"D:\\chat\\chat\\src\\Forms\\Auth\\ForgotPasswordForm\\ForgotPasswordForm.styled.tsx",[],"D:\\chat\\chat\\src\\components\\Avatar\\Avatar.tsx",["338","339"],"D:\\chat\\chat\\src\\components\\Avatar\\Avatar.styled.tsx",[],["340","341"],"D:\\chat\\chat\\src\\redux\\dialogs\\reducer.ts",["342","343"],"D:\\chat\\chat\\src\\components\\ChatInput\\ChatInput.tsx",["344","345"],"import React from 'react'\r\nimport {InputText,\r\n    Wrapper,\r\n    ChatWrapper,\r\n    EmojiImg,\r\n    SendButton,\r\n    EmojiControl,\r\n    AttachmentWrapper,\r\n    Attachment,\r\n    PreviewAttachment,\r\n    FileUpload,\r\n    AttachmentLabel,\r\n    RecordingWrapper,\r\n    RecordingIcon,\r\n    RecordingTime,\r\n    RecordTitle,\r\n    Controls,\r\n    LeftColumn,\r\n    PreviewAttachmentWrapper,\r\n    AttachmentDelete,\r\n    AttachmentDeleteIcon,\r\n    PreviewsAttach\r\n} from './ChatInput.styled'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport EmojiIcon from './Assets/Emoji.svg'\r\nimport SendIcon from './Assets/Send.svg'\r\nimport AttachmentIcon from './Assets/Attachment.svg'\r\nimport DeleteIcon from './Assets/remove.svg'\r\nimport { Picker } from 'emoji-mart'\r\nimport Recorder from './Recorder/Recorder'\r\nimport {EventTargetFiles} from './ChatInput.container'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nexport type AttachmentImagesType = {\r\n    id:number,\r\n    name:string,\r\n    url:string,\r\n    file:File\r\n}\r\n\r\nexport type ChatInputProps = {\r\n    AttachmentImages: AttachmentImagesType[],\r\n    deleteAttachment: (i:AttachmentImagesType) => void,\r\n    isRecording:boolean,\r\n    sendHandle: () => void,\r\n    voiceSend: (blob:Blob) => void,\r\n    recordingPassedTime:() => string,\r\n    autoResize:(e:React.KeyboardEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLTextAreaElement>) => void,\r\n    changeInputValue:(e:React.ChangeEvent<HTMLTextAreaElement>) => void,\r\n    toogleEmojiOpen:() => void,\r\n    EmojiStatus:boolean,\r\n    onSend:() => void,\r\n    uploadAttachmentHandle:(e:EventTargetFiles) => void,\r\n    selectEmoji:(data:any) => void,\r\n    inputValue:string,\r\n    onRecord:(blob:Blob) => void,\r\n    PassedTimeFormat:() => string,\r\n    setisRecording:React.Dispatch<React.SetStateAction<boolean>>,\r\n    setpassedTime:React.Dispatch<React.SetStateAction<number>>,\r\n    textAreaRef:React.MutableRefObject<HTMLTextAreaElement | null>\r\n    KeyPressHandle:(e: React.KeyboardEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nconst ChatInput = ({\r\n    AttachmentImages,\r\n    deleteAttachment,\r\n    isRecording,\r\n    recordingPassedTime,\r\n    autoResize,\r\n    changeInputValue,\r\n    toogleEmojiOpen,\r\n    EmojiStatus,\r\n    onSend,\r\n    uploadAttachmentHandle,\r\n    selectEmoji,\r\n    inputValue,\r\n    onRecord,\r\n    setisRecording,\r\n    setpassedTime,\r\n    textAreaRef,\r\n    KeyPressHandle\r\n}:ChatInputProps) => {\r\n    return (\r\n        <Wrapper>\r\n            {EmojiStatus ? \r\n                <Picker set='apple'\r\n                style={{\r\n                    zIndex:9909,\r\n                    right:\"0px\",\r\n                    bottom:\"90%\",\r\n                    position:\"absolute\"\r\n                }}\r\n                onClick={selectEmoji}  />\r\n            : \"\"}\r\n        <PreviewsAttach>\r\n            {AttachmentImages ? AttachmentImages.map( (i:AttachmentImagesType) => {\r\n                return (\r\n                    <PreviewAttachmentWrapper key={i.id} >\r\n                        <PreviewAttachment src={i.url} />\r\n                        <AttachmentDelete onClick={() => deleteAttachment(i)}><AttachmentDeleteIcon src={DeleteIcon} alt=\"Delete\" /></AttachmentDelete>\r\n                    </PreviewAttachmentWrapper>\r\n                )\r\n            }): \"\"}\r\n        </PreviewsAttach>\r\n\r\n        <ChatWrapper>\r\n            \r\n                <LeftColumn>\r\n                    {isRecording ? \r\n                        <RecordingWrapper>\r\n                            <RecordingTime>{recordingPassedTime()}</RecordingTime>\r\n                            <RecordingIcon />\r\n                            <RecordTitle>Recording...</RecordTitle>\r\n                        </RecordingWrapper> : \"\"}\r\n                            <InputText\r\n                                onKeyDownCapture={KeyPressHandle}\r\n                                ref={textAreaRef} \r\n                                onKeyDown={autoResize} \r\n                                onChange={changeInputValue} \r\n                                value={isRecording ? \"\" : inputValue} \r\n                                placeholder={isRecording ? \"\" :\"Type your message\"} />\r\n                </LeftColumn>\r\n                <Controls>\r\n                    {inputValue && inputValue.length > 0 ? \"\" : \r\n                        <Recorder setpassedTime={setpassedTime} setisRecording={setisRecording} isRecording={isRecording} succesRecord={onRecord} />\r\n                    }\r\n                    \r\n\r\n                    <EmojiControl >\r\n                        <EmojiImg onClick={toogleEmojiOpen} src={EmojiIcon}  />\r\n                    </EmojiControl>\r\n\r\n                    <AttachmentWrapper style={{opacity: AttachmentImages.length >= 12 ? 0.5: 1}} >\r\n                        <FileUpload  disabled={AttachmentImages.length >= 12 ? true: false} onChange={uploadAttachmentHandle} type=\"file\" id=\"Upload8fc44\" accept=\"image/x-png,image/gif,image/jpeg\"  multiple />\r\n                        <AttachmentLabel htmlFor=\"Upload8fc44\" ><Attachment src={AttachmentIcon} /></AttachmentLabel>\r\n                    </AttachmentWrapper>\r\n                    <SendButton notEmpty={(inputValue && inputValue.length > 0 ) || (AttachmentImages && AttachmentImages.length > 0)} onClick={onSend}>\r\n                        <img src={SendIcon} />\r\n                    </SendButton>\r\n                </Controls>\r\n        </ChatWrapper>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default ChatInput","D:\\chat\\chat\\src\\components\\Interlocutor\\Interlocutor.styled.tsx",[],"D:\\chat\\chat\\src\\core\\socket.js",[],["346","347"],"D:\\chat\\chat\\src\\components\\Dialogs\\Dialogs.styled.tsx",[],"D:\\chat\\chat\\src\\App.tsx",["348","349","350"],"D:\\chat\\chat\\src\\components\\Profile\\Profile.tsx",[],"D:\\chat\\chat\\src\\redux\\messages\\reducer.ts",["351"],"import {\r\n  MESSAGES_SET,\r\n  MESSAGES_ADD,\r\n  messageState,\r\n  messagesAction,\r\n  MESSAGES_READED_STATUS,\r\n  MessageType,\r\n  MESSAGES_CLEAR,\r\n} from './types'\r\n\r\nexport const initialState: any = {\r\n  items: null,\r\n  isLoading: false,\r\n};\r\n\r\nexport default (state = initialState, action: messagesAction): messageState => {\r\n  switch (action.type) {\r\n        case MESSAGES_SET:\r\n          return{\r\n            ...state,\r\n            items:action.payload\r\n          }\r\n        case MESSAGES_ADD:\r\n          return{\r\n            ...state,\r\n            items: state.items && [...state.items, action.payload]\r\n          }\r\n        case MESSAGES_READED_STATUS : \r\n        return {\r\n          ...state,\r\n          \r\n          items: state.items ?  state.items.map((message:MessageType) => {\r\n            if (message.dialog._id === action.payload.dialogId) {\r\n              message.read = true;\r\n            }\r\n            return message;\r\n          }): []\r\n        };\r\n        case MESSAGES_CLEAR :\r\n          return {\r\n            ...state, \r\n            items:[]\r\n          }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",["352","353"],"D:\\chat\\chat\\src\\redux\\user\\reducer.ts",["354","355","356"],"import { \r\n    UserActionTypes,\r\n    UserState,\r\n    SET_USER_DATA,\r\n    SET_USER_AUTH,\r\n    USER_LOADING,\r\n    LOGIN_ERROR,\r\n    REGISTER_ERROR,\r\n    USER_LOGOUT\r\n  } from './types'\r\n  \r\n  export const initialState:UserState = {\r\n    data: null,\r\n    errors:{\r\n      login:\"\",\r\n      register:\"\"\r\n    },\r\n    token: window.localStorage.token,\r\n    isAuth: !!window.localStorage.token,\r\n    loading:false\r\n  };\r\n  \r\n  export default (state = initialState, action: UserActionTypes): UserState => {\r\n    switch (action.type) {\r\n      case USER_LOADING:\r\n        return{\r\n          ...state,\r\n          loading:true\r\n        }\r\n      case SET_USER_DATA:\r\n        return {\r\n          ...state,\r\n          data: action.payload,\r\n          isAuth: true,\r\n          token: window.localStorage.token,\r\n          loading:false,\r\n          errors:{\r\n            login:\"\",\r\n            register:\"\"\r\n          },\r\n        };\r\n      case SET_USER_AUTH:\r\n        return {\r\n          ...state,\r\n          isAuth: action.payload,\r\n          loading:false,\r\n          errors:{\r\n            login:\"\",\r\n            register:\"\"\r\n          },\r\n        };\r\n      case LOGIN_ERROR : \r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            login:action.payload\r\n          }\r\n        }\r\n      case LOGIN_ERROR : \r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            register:action.payload\r\n          }\r\n      }\r\n      case USER_LOGOUT : \r\n        return {\r\n          ...state,\r\n          data:null,\r\n          isAuth:false,\r\n          token:null\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ",["357","358"],"D:\\chat\\chat\\src\\redux\\user\\types.ts",["359"],"export const SET_USER_DATA = \"SET_USER_DATA\"\r\nexport const SET_USER_AUTH = \"SET_USER_AUTH\"\r\nexport const FETCH_USER_DATA = \"FETCH_USER_DATA\"\r\nexport const USER_LOGIN = \"USER_LOGIN\"\r\nexport const USER_REGISTER = \"USER_REGISTER\"\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\"\r\nexport const REGISTER_ERROR = \"REGISTER_ERROR\"\r\nexport const USER_LOADING = \"USER_LOADING\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport type LoginData = {\r\n    email:string,\r\n    password:string\r\n}\r\n\r\nexport type RegisterData = {\r\n    firstname:string,\r\n    lastname:string,\r\n    username:string,\r\n    email:string,\r\n    password:string\r\n}\r\n\r\nexport type Userdata = {\r\n    _id:string,\r\n    avatar:{\r\n        filename:\"\",\r\n        path:\"\"\r\n    }\r\n    username:string,\r\n    firstname:string,\r\n    lastname:string,\r\n    email:string,\r\n    createdAt:string,\r\n    bio:string,\r\n    last_seen:string,\r\n    isOnline:boolean,\r\n}\r\n\r\ninterface RegisterUserAction {\r\n    type: typeof USER_REGISTER,\r\n}\r\n\r\ninterface LoginUserAction {\r\n    type: typeof USER_LOGIN,\r\n}\r\n\r\ninterface RegisterUserErrorAction {\r\n    type: typeof REGISTER_ERROR,\r\n    payload:string,\r\n}\r\n\r\ninterface LoginUserErrorAction {\r\n    type: typeof LOGIN_ERROR,\r\n    payload:string\r\n}\r\n\r\ninterface SET_USER_DATA_ACTION{\r\n    type: typeof SET_USER_DATA,\r\n    payload:Userdata\r\n}\r\ninterface SET_USER_AUTH_ACTION{\r\n    type: typeof SET_USER_AUTH,\r\n    payload:boolean\r\n}\r\ninterface USER_LOADING{\r\n    type: typeof USER_LOADING,\r\n}\r\n\r\ninterface USER_LOGOUT_ACTION{\r\n    type:typeof USER_LOGOUT\r\n}\r\n\r\nexport type UserLoginResponse = {\r\n    status:string,\r\n    token:string\r\n  }\r\n\r\nexport type UserActionTypes =\r\n    RegisterUserAction |\r\n    LoginUserAction |\r\n    SET_USER_DATA_ACTION |\r\n    SET_USER_AUTH_ACTION |\r\n    USER_LOADING |\r\n    RegisterUserErrorAction |\r\n    LoginUserErrorAction |\r\n    USER_LOGOUT_ACTION\r\n;\r\n\r\nexport type UserState = {\r\n    data:Userdata | null;\r\n    errors:{\r\n        login:string,\r\n        register:string\r\n    },\r\n    token:string | null,\r\n    isAuth:boolean,\r\n    loading:boolean,\r\n}\r\n","D:\\chat\\chat\\src\\Pages\\Auth\\Auth.tsx",[],"D:\\chat\\chat\\src\\components\\Interlocutor\\Interlocutor.tsx",[],"D:\\chat\\chat\\src\\components\\FoundUsers\\FoundUsers.styled.tsx",[],"D:\\chat\\chat\\src\\components\\ChatInput\\Recorder\\Recorder.styled.tsx",[],["360","361"],"D:\\chat\\chat\\src\\components\\Interlocutor\\Interlocutor.container.tsx",[],"D:\\chat\\chat\\src\\components\\User\\User.container.tsx",[],"D:\\chat\\chat\\src\\components\\FoundUsers\\FoundUsers.container.tsx",[],"D:\\chat\\chat\\src\\components\\Dialog\\Dialog.container.tsx",["362"],"D:\\chat\\chat\\src\\Forms\\Auth\\LoginForm\\LoginForm.tsx",[],["363","364"],"D:\\chat\\chat\\src\\lib\\generateAvatar.ts",[],"D:\\chat\\chat\\src\\Pages\\Home\\Home.tsx",["365","366","367","368","369"],"import React, { useEffect } from 'react'\r\nimport {SideMenu, Wrapper, MessagesWrapper, SideMenuWrapper, MessagesMenu} from './Home.styled'\r\nimport Dialogs from '../../components/Dialogs/Dialogs.container'\r\nimport Messages from '../../components/Messages/Messages.container'\r\nimport Search from '../../components/Search/Search.container'\r\nimport ChatInput from '../../components/ChatInput/ChatInput.container'\r\nimport Profile from '../../components/Profile/Profile.container'\r\nimport Interlocutor from '../../components/Interlocutor/Interlocutor.container'\r\nimport { searchDialogs, clearFoundDialogs, fetchDialogs } from '../../redux/dialogs/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DialogState } from '../../redux/dialogs/types'\r\nimport FoundUsers from '../../components/FoundUsers/FoundUsers.container'\r\nimport { UserState } from '../../redux/user/types'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { userLogout } from '../../redux/user/actions'\r\n\r\nconst Home = () => {\r\n    const foundUsers = useSelector( (state:{dialog:DialogState}) => state.dialog.usersfound)\r\n    const currentDialog = useSelector( (state:{dialog:DialogState}) => state.dialog.currentDialog)\r\n    const selectedUser = useSelector( (state:{dialog:DialogState}) => state.dialog.selectedUser)\r\n    const user = useSelector( (state:{user:UserState}) => state.user.data)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onUserSearch = (value:string) => {\r\n        if(value !== \"\"){\r\n            dispatch(searchDialogs(value))\r\n        }else{\r\n            dispatch(clearFoundDialogs())\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchDialogs())\r\n        // socket.on('SERVER:MESSAGES_READED', (data:any) =>{dispatch(fetchDialogs())});\r\n    }, [])\r\n\r\n    if(!user){\r\n        return <></>\r\n    }\r\n    return(\r\n        <Wrapper>\r\n            <SideMenu isSelect={!!(currentDialog || selectedUser)}>\r\n                <Profile />\r\n                <Search onChange={onUserSearch} />\r\n                {foundUsers  ? <FoundUsers /> : <Dialogs />}\r\n            </SideMenu>\r\n\r\n            <MessagesMenu isSelect={!!(currentDialog || selectedUser)}>\r\n                <Interlocutor />\r\n                <Messages />\r\n                <ChatInput />\r\n            </MessagesMenu>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Home","D:\\chat\\chat\\src\\components\\Search\\Search.styled.tsx",[],"D:\\chat\\chat\\src\\components\\ChatInput\\Recorder\\Recorder.tsx",["370","371"],"import React, { useState, useEffect, Dispatch, SetStateAction } from 'react'\r\nimport {Record, RecordWrapper} from './Recorder.styled'\r\nimport MicrophoneIcon from '../Assets/microphone.svg'\r\n\r\ntype RecorderProps = {\r\n    succesRecord:(blob:Blob) => void,\r\n    setisRecording: Dispatch<SetStateAction<boolean>>,\r\n    isRecording:boolean,\r\n    setpassedTime: Dispatch<SetStateAction<number>>\r\n}\r\n    \r\n\r\nconst Recorder = ({\r\n    succesRecord,\r\n    setisRecording,\r\n    isRecording,\r\n    setpassedTime\r\n    }: RecorderProps) => {\r\n        const [mediaRecorder, setmediaRecorder] = useState<MediaRecorder | null>()\r\n        let timePassing:number \r\n        if(!navigator.mediaDevices){\r\n            return <> </>\r\n        }\r\n\r\n        const handleSuccess = (strem:MediaStream, event:React.MouseEvent<HTMLDivElement>) => {\r\n                let chunks:any[] = []\r\n                let stream = strem\r\n\r\n                const mouseUsEvent = () => {\r\n                    setisRecording(false)\r\n                    return mediaRecorder.stop()\r\n                }\r\n        \r\n                const mediaRecorder = new MediaRecorder(stream)\r\n                    event.target.addEventListener(\"mouseup\", mouseUsEvent)\r\n                    setmediaRecorder(mediaRecorder)\r\n                    \r\n                    timePassing = setInterval( () => {\r\n                        setpassedTime((prevState:number) => prevState + 1 )\r\n                    }, 1000)\r\n        \r\n                    mediaRecorder.addEventListener(\"dataavailable\", (e) => {\r\n                        chunks.push(e.data)\r\n                    })\r\n                    mediaRecorder.addEventListener(\"stop\" , () => {\r\n                        clearInterval(timePassing)\r\n                        setpassedTime(0)\r\n                        const blob = new Blob(chunks, { 'type': 'audio/ogg; codecs=opus' })\r\n                        \r\n                        chunks = []\r\n                        stream.getAudioTracks().forEach((track) => track.stop())\r\n        \r\n                        if(blob.size < 16769) {\r\n                            return\r\n                        }\r\n                        succesRecord(blob)\r\n                        event.target.removeEventListener(\"mouseup\", mouseUsEvent)\r\n                    })\r\n                    mediaRecorder.start()\r\n        }\r\n\r\n        const startRecording = (event:React.MouseEvent<HTMLDivElement>) => {\r\n            if (isRecording) return\r\n            setisRecording(true)\r\n            clearInterval(timePassing)\r\n\r\n            navigator.mediaDevices\r\n                .getUserMedia({audio:true})\r\n                .then(stream =>(handleSuccess(stream, event)))\r\n                .catch( (e) => console.log(e) )\r\n        }\r\n    \r\n        const stopRecording = () => {\r\n            if (!isRecording) return\r\n            if(!mediaRecorder) return \r\n            setisRecording(false)\r\n            mediaRecorder.stop()\r\n        }\r\n\r\n    return(\r\n        <RecordWrapper onMouseDown={startRecording} >\r\n            <Record src={MicrophoneIcon} />\r\n        </RecordWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Recorder","D:\\chat\\chat\\src\\globalStyles.tsx",[],"D:\\chat\\chat\\src\\Pages\\Auth\\Auth.styled.tsx",[],"D:\\chat\\chat\\src\\Forms\\Auth\\Auth.styled.tsx",[],"D:\\chat\\chat\\src\\components\\User\\User.styled.tsx",[],"D:\\chat\\chat\\src\\components\\ChatInput\\ChatInput.styled.tsx",[],"D:\\chat\\chat\\src\\Forms\\Auth\\Assets\\index.ts",[],"D:\\chat\\chat\\src\\Pages\\Home\\Home.styled.tsx",["372"],"D:\\chat\\chat\\src\\components\\Search\\Search.tsx",["373","374"],"import React from 'react'\r\nimport {useState, useRef} from \"react\"\r\nimport {Wrapper, SearchInput, SearchIMG,CloseIMG, CloseIMGWrapper} from './Search.styled'\r\nimport SearchIcon from './Assets/search.svg'\r\nimport CloseIcon from './Assets/close.svg'\r\n\r\n\r\nexport type SearchProps = {\r\n    SearchInputRef:React.MutableRefObject<HTMLInputElement | null>,\r\n    searchValue:string,\r\n    changeValue:(e:React.ChangeEvent<HTMLInputElement>) => void,\r\n    clearSearchValue:() => void\r\n}\r\n\r\nconst Search = ({\r\n    SearchInputRef,\r\n    searchValue,\r\n    changeValue,\r\n    clearSearchValue\r\n}:SearchProps) => {\r\n    return(\r\n        <Wrapper>\r\n            <SearchInput \r\n                ref={SearchInputRef} \r\n                value={searchValue} \r\n                onChange={changeValue} \r\n                type=\"text\" \r\n                placeholder=\"Search for friends\"\r\n            />\r\n            {searchValue.length >= 1 ? \r\n                <CloseIMGWrapper onClick={clearSearchValue}><CloseIMG src={CloseIcon} alt=\"close\" /></CloseIMGWrapper>\r\n                : <SearchIMG src={SearchIcon} alt=\"search\" />\r\n            }\r\n            \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Search","D:\\chat\\chat\\src\\Forms\\Auth\\ForgotPasswordForm\\ForgotPasswordForm.tsx",[],"D:\\chat\\chat\\src\\components\\Profile\\Profile.container.tsx",[],"D:\\chat\\chat\\src\\redux\\store.ts",[],"D:\\chat\\chat\\src\\components\\Profile\\Settings\\Settings.styled.tsx",[],"D:\\chat\\chat\\src\\components\\Profile\\Settings\\Settings.tsx",["375"],"import React from 'react'\r\nimport Avatar from '../../Avatar/Avatar'\r\nimport {\r\n    Wrapper,\r\n    TopBar,\r\n    Title,\r\n    ItemTitle,\r\n    SettingList,\r\n    SettingItem,\r\n    ItemValue,\r\n    AvatarWrapper,\r\n    FullName,\r\n    LogoutButton,\r\n    CloseIcon,\r\n    MainDataWrapper,\r\n    AvatarInput,\r\n    AvatarInputLabel,\r\n    SettingsWrapper\r\n} from './Settings.styled'\r\nimport closeIcon from '../../../Assets/img/close.svg'\r\nimport { Userdata } from '../../../redux/user/types'\r\nimport UpdateForm from './UpdateForm/UpdateForm'\r\nimport { UpdateItems } from './Settings.container'\r\n\r\nexport type SettingsProps = {\r\n    closeSettings:() => void,\r\n    LogoutUser?:() => void,\r\n    user:Userdata,\r\n    SelectItem: (name:UpdateItems) => void,\r\n    selectedItem:UpdateItems,\r\n    closeModal:(e:React.MouseEvent<HTMLDivElement>) => void,\r\n    closeItemModal:(e: React.MouseEvent<HTMLDivElement>) => void,\r\n    closeSettingItem:() => void,\r\n    updateAvatar: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst Settings = ({closeSettings, LogoutUser, user, SelectItem, selectedItem, closeModal, closeItemModal, closeSettingItem, updateAvatar}: SettingsProps) => {\r\n\r\n    return(\r\n        <SettingsWrapper className=\"SettingsBack\" onClick={selectedItem ? closeItemModal : closeModal}>\r\n            <Wrapper className=\"Settings\">\r\n                <TopBar>\r\n                    <Title>Edit profile</Title>\r\n                    <CloseIcon\r\n                        onClick={closeSettings} \r\n                        src={closeIcon} \r\n                        width=\"15px\" \r\n                        height=\"15px\" \r\n                    />\r\n                </TopBar>\r\n                <MainDataWrapper>\r\n                        <AvatarWrapper> \r\n                            <Avatar\r\n                            srcImage={user.avatar ? user.avatar.path : null} \r\n                            size={160} \r\n                            user={{\r\n                                firstname:user.firstname,\r\n                                lastname:user.lastname\r\n                            }} />\r\n                            <AvatarInput onChange={updateAvatar} name=\"avatar\" type=\"file\" id=\"avatarFile#443\" accept=\"image/x-png,image/gif,image/jpeg\"/>\r\n                            <AvatarInputLabel htmlFor=\"avatarFile#443\" ></AvatarInputLabel>\r\n                        </AvatarWrapper>\r\n                        <SettingList>\r\n                            <SettingItem onClick={() => SelectItem(\"FULLNAME\")}>\r\n                                <ItemTitle>FULLNAME</ItemTitle>\r\n                                <ItemValue>{user.firstname} {user.lastname}</ItemValue>\r\n                            </SettingItem>\r\n\r\n                            <SettingItem onClick={() => SelectItem(\"USERNAME\")} >\r\n                                <ItemTitle>USERNAME</ItemTitle>\r\n                                <ItemValue>@{user.username}</ItemValue>\r\n                            </SettingItem>\r\n\r\n                            <SettingItem onClick={() => SelectItem(\"EMAIL\")} >\r\n                                <ItemTitle>EMAIL</ItemTitle>\r\n                                <ItemValue>{user.email}</ItemValue>\r\n                            </SettingItem>\r\n\r\n                            <SettingItem onClick={() => SelectItem(\"ABOUT_ME\")}>\r\n                                <ItemTitle>ABOUT ME</ItemTitle>\r\n                                <ItemValue>\r\n                                    {user.bio}\r\n                                </ItemValue>\r\n                            </SettingItem>\r\n                        </SettingList>\r\n                        <LogoutButton onClick={LogoutUser}>Log out</LogoutButton>\r\n                        {selectedItem ?  \r\n                        <UpdateForm\r\n                            closeSettingItem={closeSettingItem}\r\n                            name={selectedItem}\r\n                        /> : \"\"}\r\n                </MainDataWrapper>\r\n            </Wrapper>\r\n        </SettingsWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","D:\\chat\\chat\\src\\components\\Profile\\Settings\\UpdateForm\\UpdateForm.tsx",[],"D:\\chat\\chat\\src\\components\\Profile\\Settings\\UpdateForm\\UpdateForm.styled.tsx",[],"D:\\chat\\chat\\src\\components\\Profile\\Settings\\Settings.container.tsx",[],{"ruleId":"376","severity":1,"message":"377","line":3,"column":61,"nodeType":"378","messageId":"379","endLine":3,"endColumn":85},{"ruleId":"376","severity":1,"message":"380","line":9,"column":10,"nodeType":"378","messageId":"379","endLine":9,"endColumn":22},{"ruleId":"376","severity":1,"message":"381","line":15,"column":11,"nodeType":"378","messageId":"379","endLine":15,"endColumn":23},{"ruleId":"382","severity":1,"message":"383","line":26,"column":8,"nodeType":"384","endLine":26,"endColumn":46,"suggestions":"385"},{"ruleId":"382","severity":1,"message":"386","line":50,"column":8,"nodeType":"384","endLine":50,"endColumn":10,"suggestions":"387"},{"ruleId":"382","severity":1,"message":"388","line":60,"column":8,"nodeType":"384","endLine":60,"endColumn":23,"suggestions":"389"},{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","replacedBy":"393"},{"ruleId":"390","replacedBy":"394"},{"ruleId":"392","replacedBy":"395"},{"ruleId":"390","replacedBy":"396"},{"ruleId":"392","replacedBy":"397"},{"ruleId":"390","replacedBy":"398"},{"ruleId":"392","replacedBy":"399"},{"ruleId":"376","severity":1,"message":"400","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":24},{"ruleId":"382","severity":1,"message":"401","line":37,"column":8,"nodeType":"384","endLine":37,"endColumn":45,"suggestions":"402"},{"ruleId":"376","severity":1,"message":"403","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":33},{"ruleId":"376","severity":1,"message":"404","line":8,"column":35,"nodeType":"378","messageId":"379","endLine":8,"endColumn":60},{"ruleId":"405","severity":1,"message":"406","line":20,"column":19,"nodeType":"407","messageId":"408","endLine":20,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":20,"column":52,"nodeType":"407","messageId":"408","endLine":20,"endColumn":54},{"ruleId":"405","severity":1,"message":"409","line":20,"column":52,"nodeType":"407","messageId":"408","endLine":20,"endColumn":54},{"ruleId":"405","severity":1,"message":"409","line":20,"column":58,"nodeType":"407","messageId":"408","endLine":20,"endColumn":60},{"ruleId":"382","severity":1,"message":"386","line":34,"column":8,"nodeType":"384","endLine":34,"endColumn":10,"suggestions":"410"},{"ruleId":"376","severity":1,"message":"411","line":2,"column":26,"nodeType":"378","messageId":"379","endLine":2,"endColumn":37},{"ruleId":"412","severity":1,"message":"413","line":10,"column":17,"nodeType":"414","messageId":"415","endLine":10,"endColumn":41},{"ruleId":"376","severity":1,"message":"380","line":4,"column":10,"nodeType":"378","messageId":"379","endLine":4,"endColumn":22},{"ruleId":"376","severity":1,"message":"416","line":10,"column":3,"nodeType":"378","messageId":"379","endLine":10,"endColumn":14},{"ruleId":"376","severity":1,"message":"417","line":25,"column":11,"nodeType":"378","messageId":"379","endLine":25,"endColumn":24},{"ruleId":"376","severity":1,"message":"418","line":26,"column":11,"nodeType":"378","messageId":"379","endLine":26,"endColumn":15},{"ruleId":"376","severity":1,"message":"417","line":41,"column":11,"nodeType":"378","messageId":"379","endLine":41,"endColumn":24},{"ruleId":"405","severity":1,"message":"409","line":90,"column":39,"nodeType":"407","messageId":"408","endLine":90,"endColumn":41},{"ruleId":"405","severity":1,"message":"409","line":90,"column":59,"nodeType":"407","messageId":"408","endLine":90,"endColumn":61},{"ruleId":"390","replacedBy":"419"},{"ruleId":"392","replacedBy":"420"},{"ruleId":"390","replacedBy":"421"},{"ruleId":"392","replacedBy":"422"},{"ruleId":"390","replacedBy":"423"},{"ruleId":"392","replacedBy":"424"},{"ruleId":"376","severity":1,"message":"425","line":1,"column":16,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"426","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":35},{"ruleId":"376","severity":1,"message":"427","line":1,"column":37,"nodeType":"378","messageId":"379","endLine":1,"endColumn":43},{"ruleId":"376","severity":1,"message":"428","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":26},{"ruleId":"376","severity":1,"message":"426","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"429","line":10,"column":8,"nodeType":"378","messageId":"379","endLine":10,"endColumn":13},{"ruleId":"390","replacedBy":"430"},{"ruleId":"392","replacedBy":"431"},{"ruleId":"376","severity":1,"message":"432","line":14,"column":10,"nodeType":"378","messageId":"379","endLine":14,"endColumn":32},{"ruleId":"433","severity":1,"message":"434","line":26,"column":1,"nodeType":"435","endLine":79,"endColumn":3},{"ruleId":"376","severity":1,"message":"400","line":33,"column":8,"nodeType":"378","messageId":"379","endLine":33,"endColumn":24},{"ruleId":"436","severity":1,"message":"437","line":139,"column":25,"nodeType":"438","endLine":139,"endColumn":47},{"ruleId":"390","replacedBy":"439"},{"ruleId":"392","replacedBy":"440"},{"ruleId":"376","severity":1,"message":"441","line":13,"column":8,"nodeType":"378","messageId":"379","endLine":13,"endColumn":14},{"ruleId":"376","severity":1,"message":"380","line":14,"column":10,"nodeType":"378","messageId":"379","endLine":14,"endColumn":22},{"ruleId":"382","severity":1,"message":"383","line":22,"column":6,"nodeType":"384","endLine":22,"endColumn":8,"suggestions":"442"},{"ruleId":"433","severity":1,"message":"434","line":16,"column":1,"nodeType":"435","endLine":47,"endColumn":3},{"ruleId":"390","replacedBy":"443"},{"ruleId":"392","replacedBy":"444"},{"ruleId":"376","severity":1,"message":"445","line":8,"column":5,"nodeType":"378","messageId":"379","endLine":8,"endColumn":19},{"ruleId":"433","severity":1,"message":"434","line":23,"column":3,"nodeType":"435","endLine":78,"endColumn":5},{"ruleId":"446","severity":1,"message":"447","line":60,"column":7,"nodeType":"448","messageId":"415","endLine":67,"endColumn":8},{"ruleId":"390","replacedBy":"449"},{"ruleId":"392","replacedBy":"450"},{"ruleId":"451","severity":1,"message":"452","line":66,"column":11,"nodeType":"378","messageId":"453","endLine":66,"endColumn":23},{"ruleId":"390","replacedBy":"454"},{"ruleId":"392","replacedBy":"455"},{"ruleId":"382","severity":1,"message":"456","line":34,"column":8,"nodeType":"384","endLine":34,"endColumn":10,"suggestions":"457"},{"ruleId":"390","replacedBy":"423"},{"ruleId":"392","replacedBy":"424"},{"ruleId":"376","severity":1,"message":"458","line":2,"column":28,"nodeType":"378","messageId":"379","endLine":2,"endColumn":43},{"ruleId":"376","severity":1,"message":"459","line":2,"column":45,"nodeType":"378","messageId":"379","endLine":2,"endColumn":60},{"ruleId":"376","severity":1,"message":"460","line":14,"column":10,"nodeType":"378","messageId":"379","endLine":14,"endColumn":18},{"ruleId":"376","severity":1,"message":"461","line":15,"column":10,"nodeType":"378","messageId":"379","endLine":15,"endColumn":20},{"ruleId":"382","severity":1,"message":"383","line":36,"column":8,"nodeType":"384","endLine":36,"endColumn":10,"suggestions":"462"},{"ruleId":"376","severity":1,"message":"425","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"463","line":73,"column":15,"nodeType":"378","messageId":"379","endLine":73,"endColumn":28},{"ruleId":"376","severity":1,"message":"428","line":1,"column":18,"nodeType":"378","messageId":"379","endLine":1,"endColumn":27},{"ruleId":"376","severity":1,"message":"426","line":2,"column":9,"nodeType":"378","messageId":"379","endLine":2,"endColumn":17},{"ruleId":"376","severity":1,"message":"427","line":2,"column":19,"nodeType":"378","messageId":"379","endLine":2,"endColumn":25},{"ruleId":"376","severity":1,"message":"464","line":12,"column":5,"nodeType":"378","messageId":"379","endLine":12,"endColumn":13},"@typescript-eslint/no-unused-vars","'messageUpdateReadStatus2' is defined but never used.","Identifier","unusedVar","'fetchDialogs' is defined but never used.","'selectedUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["465"],"React Hook useEffect has missing dependencies: 'dispatch' and 'me'. Either include them or remove the dependency array.",["466"],"React Hook useEffect has missing dependencies: 'me?._id' and 'toggleIsTyping'. Either include them or remove the dependency array.",["467"],"no-native-reassign",["468"],"no-negated-in-lhs",["469"],["468"],["469"],["468"],["469"],["468"],["469"],"'PerfectScrollbar' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'scrollRef.current'. Either exclude it or remove the dependency array. Mutable values like 'scrollRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["470"],"'messageUpdateReadStatus' is defined but never used.","'messageUpdateNotReadCount' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.",["471"],"'SearchProps' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'MessageType' is defined but never used.","'currentDialog' is assigned a value but never used.","'meId' is assigned a value but never used.",["468"],["469"],["468"],["469"],["468"],["469"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'keyframes' is defined but never used.","'axios' is defined but never used.",["468"],["469"],"'MESSAGES_READED_STATUS' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["468"],["469"],"'socket' is defined but never used.",["472"],["468"],["469"],"'REGISTER_ERROR' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase",["468"],["469"],"@typescript-eslint/no-redeclare","'USER_LOADING' is already defined.","redeclared",["468"],["469"],"React Hook useEffect has missing dependencies: 'me?._id', 'props.dialog._id', and 'toggleIsTyping'. Either include them or remove the dependency array.",["473"],"'MessagesWrapper' is defined but never used.","'SideMenuWrapper' is defined but never used.","'Redirect' is defined but never used.","'userLogout' is defined but never used.",["474"],"'stopRecording' is assigned a value but never used.","'FullName' is defined but never used.",{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},"no-global-assign","no-unsafe-negation",{"desc":"481","fix":"482"},{"desc":"477","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"484","fix":"488"},"Update the dependencies array to be: [currentDialog, dispatch, scrollRef, wrapperRef]",{"range":"489","text":"490"},"Update the dependencies array to be: [dispatch, me]",{"range":"491","text":"492"},"Update the dependencies array to be: [currentDialog, me?._id, toggleIsTyping]",{"range":"493","text":"494"},"Update the dependencies array to be: [scrollRef, items]",{"range":"495","text":"496"},{"range":"497","text":"492"},"Update the dependencies array to be: [dispatch]",{"range":"498","text":"499"},"Update the dependencies array to be: [me?._id, props.dialog._id, toggleIsTyping]",{"range":"500","text":"501"},{"range":"502","text":"499"},[1269,1307],"[currentDialog, dispatch, scrollRef, wrapperRef]",[2030,2032],"[dispatch, me]",[2327,2342],"[currentDialog, me?._id, toggleIsTyping]",[1081,1118],"[scrollRef, items]",[1656,1658],[710,712],"[dispatch]",[1335,1337],"[me?._id, props.dialog._id, toggleIsTyping]",[1772,1774]]